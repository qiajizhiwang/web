<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiangxing.mapper.ExamMapper" >
  <resultMap id="BaseResultMap" type="com.xiangxing.model.Exam" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="subject_id" property="subjectId" jdbcType="BIGINT" />
    <result column="rank" property="rank" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="exam_time" property="examTime" jdbcType="VARCHAR" />
    <result column="open_flag" property="openFlag" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xiangxing.model.Exam" extends="BaseResultMap" >
    <result column="exam_address" property="examAddress" jdbcType="VARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, subject_id, rank, money, exam_time, open_flag
  </sql>
  <sql id="Blob_Column_List" >
    exam_address
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xiangxing.model.ExamExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xiangxing.model.ExamExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_exam
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_exam
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiangxing.model.ExamExample" >
    delete from t_exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiangxing.model.Exam" >
    insert into t_exam (id, subject_id, rank, 
      money, exam_time, open_flag, 
      exam_address)
    values (#{id,jdbcType=BIGINT}, #{subjectId,jdbcType=BIGINT}, #{rank,jdbcType=VARCHAR}, 
      #{money,jdbcType=DECIMAL}, #{examTime,jdbcType=VARCHAR}, #{openFlag,jdbcType=VARCHAR}, 
      #{examAddress,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.xiangxing.model.Exam" >
    insert into t_exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="rank != null" >
        rank,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="examTime != null" >
        exam_time,
      </if>
      <if test="openFlag != null" >
        open_flag,
      </if>
      <if test="examAddress != null" >
        exam_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="subjectId != null" >
        #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="rank != null" >
        #{rank,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="examTime != null" >
        #{examTime,jdbcType=VARCHAR},
      </if>
      <if test="openFlag != null" >
        #{openFlag,jdbcType=VARCHAR},
      </if>
      <if test="examAddress != null" >
        #{examAddress,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiangxing.model.ExamExample" resultType="java.lang.Integer" >
    select count(*) from t_exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_exam
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.subjectId != null" >
        subject_id = #{record.subjectId,jdbcType=BIGINT},
      </if>
      <if test="record.rank != null" >
        rank = #{record.rank,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.examTime != null" >
        exam_time = #{record.examTime,jdbcType=VARCHAR},
      </if>
      <if test="record.openFlag != null" >
        open_flag = #{record.openFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.examAddress != null" >
        exam_address = #{record.examAddress,jdbcType=VARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_exam
    set id = #{record.id,jdbcType=BIGINT},
      subject_id = #{record.subjectId,jdbcType=BIGINT},
      rank = #{record.rank,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DECIMAL},
      exam_time = #{record.examTime,jdbcType=VARCHAR},
      open_flag = #{record.openFlag,jdbcType=VARCHAR},
      exam_address = #{record.examAddress,jdbcType=VARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_exam
    set id = #{record.id,jdbcType=BIGINT},
      subject_id = #{record.subjectId,jdbcType=BIGINT},
      rank = #{record.rank,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DECIMAL},
      exam_time = #{record.examTime,jdbcType=VARCHAR},
      open_flag = #{record.openFlag,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiangxing.model.Exam" >
    update t_exam
    <set >
      <if test="subjectId != null" >
        subject_id = #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="rank != null" >
        rank = #{rank,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="examTime != null" >
        exam_time = #{examTime,jdbcType=VARCHAR},
      </if>
      <if test="openFlag != null" >
        open_flag = #{openFlag,jdbcType=VARCHAR},
      </if>
      <if test="examAddress != null" >
        exam_address = #{examAddress,jdbcType=VARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiangxing.model.Exam" >
    update t_exam
    set subject_id = #{subjectId,jdbcType=BIGINT},
      rank = #{rank,jdbcType=VARCHAR},
      money = #{money,jdbcType=DECIMAL},
      exam_time = #{examTime,jdbcType=VARCHAR},
      open_flag = #{openFlag,jdbcType=VARCHAR},
      exam_address = #{examAddress,jdbcType=VARBINARY}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiangxing.model.Exam" >
    update t_exam
    set subject_id = #{subjectId,jdbcType=BIGINT},
      rank = #{rank,jdbcType=VARCHAR},
      money = #{money,jdbcType=DECIMAL},
      exam_time = #{examTime,jdbcType=VARCHAR},
      open_flag = #{openFlag,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>