<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiangxing.mapper.StudentHomeworkMapper" >
  <resultMap id="BaseResultMap" type="com.xiangxing.model.StudentHomework" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="homework_id" property="homeworkId" jdbcType="BIGINT" />
    <result column="student_id" property="studentId" jdbcType="BIGINT" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="layout" property="layout" jdbcType="INTEGER" />
    <result column="color" property="color" jdbcType="INTEGER" />
    <result column="subject" property="subject" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="height" property="height" jdbcType="INTEGER" />
    <result column="width" property="width" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, homework_id, student_id, path, finish_time, layout, color, subject, remark, status, 
    height, width
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xiangxing.model.StudentHomeworkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_student_homework
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_student_homework
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_student_homework
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiangxing.model.StudentHomeworkExample" >
    delete from t_student_homework
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiangxing.model.StudentHomework" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_student_homework (homework_id, student_id, path, 
      finish_time, layout, color, 
      subject, remark, status, 
      height, width)
    values (#{homeworkId,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, #{path,jdbcType=VARCHAR}, 
      #{finishTime,jdbcType=TIMESTAMP}, #{layout,jdbcType=INTEGER}, #{color,jdbcType=INTEGER}, 
      #{subject,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{height,jdbcType=INTEGER}, #{width,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xiangxing.model.StudentHomework" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_student_homework
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="homeworkId != null" >
        homework_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="finishTime != null" >
        finish_time,
      </if>
      <if test="layout != null" >
        layout,
      </if>
      <if test="color != null" >
        color,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="height != null" >
        height,
      </if>
      <if test="width != null" >
        width,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="homeworkId != null" >
        #{homeworkId,jdbcType=BIGINT},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="finishTime != null" >
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="layout != null" >
        #{layout,jdbcType=INTEGER},
      </if>
      <if test="color != null" >
        #{color,jdbcType=INTEGER},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="height != null" >
        #{height,jdbcType=INTEGER},
      </if>
      <if test="width != null" >
        #{width,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiangxing.model.StudentHomeworkExample" resultType="java.lang.Integer" >
    select count(*) from t_student_homework
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_student_homework
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.homeworkId != null" >
        homework_id = #{record.homeworkId,jdbcType=BIGINT},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=BIGINT},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.finishTime != null" >
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.layout != null" >
        layout = #{record.layout,jdbcType=INTEGER},
      </if>
      <if test="record.color != null" >
        color = #{record.color,jdbcType=INTEGER},
      </if>
      <if test="record.subject != null" >
        subject = #{record.subject,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.height != null" >
        height = #{record.height,jdbcType=INTEGER},
      </if>
      <if test="record.width != null" >
        width = #{record.width,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_student_homework
    set id = #{record.id,jdbcType=BIGINT},
      homework_id = #{record.homeworkId,jdbcType=BIGINT},
      student_id = #{record.studentId,jdbcType=BIGINT},
      path = #{record.path,jdbcType=VARCHAR},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      layout = #{record.layout,jdbcType=INTEGER},
      color = #{record.color,jdbcType=INTEGER},
      subject = #{record.subject,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      height = #{record.height,jdbcType=INTEGER},
      width = #{record.width,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiangxing.model.StudentHomework" >
    update t_student_homework
    <set >
      <if test="homeworkId != null" >
        homework_id = #{homeworkId,jdbcType=BIGINT},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="finishTime != null" >
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="layout != null" >
        layout = #{layout,jdbcType=INTEGER},
      </if>
      <if test="color != null" >
        color = #{color,jdbcType=INTEGER},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="height != null" >
        height = #{height,jdbcType=INTEGER},
      </if>
      <if test="width != null" >
        width = #{width,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiangxing.model.StudentHomework" >
    update t_student_homework
    set homework_id = #{homeworkId,jdbcType=BIGINT},
      student_id = #{studentId,jdbcType=BIGINT},
      path = #{path,jdbcType=VARCHAR},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      layout = #{layout,jdbcType=INTEGER},
      color = #{color,jdbcType=INTEGER},
      subject = #{subject,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      height = #{height,jdbcType=INTEGER},
      width = #{width,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>